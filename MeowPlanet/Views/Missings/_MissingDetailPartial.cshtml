@model MeowPlanet.ViewModels.Missings.DetailViewModel
@using System.Security.Claims;
@{
    bool isLogin = Int32.TryParse(User.Claims.Where(x => x.Type == ClaimTypes.Sid).Select(x => x.Value).FirstOrDefault(), out int selfId);
}
@{
    string sex = Model.Sex == true ? "男生" : "女生";
}

<style>
    img {
        object-fit: cover;
    }

    #main-img > img {
        border-radius: 15px;
        transition: all 0.5s ease;
    }

        #main-img > img:hover {
            transform: scale(1.5);
        }

    .modal-footer button {
        width: 170px;
        font-size: 1.3rem;
    }

    #thumbnail div {
        border-radius: 10px;
        overflow: hidden;
    }

    .hover-border {
        border: 2px solid white;
    }

    .speech-bubble {
        position: relative;
        background: #c9c9c9;
        border-radius: .4em;
        top: 5px;
        margin: auto;
    }

        .speech-bubble:after {
            content: '';
            position: absolute;
            top: 5px;
            left: 7%;
            width: 0;
            height: 0;
            border: 18px solid transparent;
            border-bottom-color: #c9c9c9;
            border-top: 0;
            border-left: 0;
            margin-left: -20px;
            margin-top: -23px;
        }

    .modal-body {
        color: white;
        font-size: 20px;
    }

        .modal-body p {
            margin-bottom: 3.5%;
        }

    a {
        text-decoration: none;
        color: white;
    }

        a:hover {
            color: wheat;
        }

    .mt-75 {
        margin-top: 0.75rem;
    }

    .btn-light:hover {
        background-color: #404C59;
        color: white;
    }
</style>


<div class="modal-dialog modal-dialog-centered" style="max-width: 600px;">
    <div class="modal-content" style="background-color: rgb(27, 39, 53);">
        <div class="modal-header">
            <h4 class="modal-title text-light m-auto" id="detailModalLabel">詳細資訊</h4>
        </div>
        <div class="modal-body p-4" style="height: 500px;">
            <div class="float-end" style="width: 300px">
                <div id="main-img" style="height: 225px; width: 300px">
                    <img class="h-100 w-100" src="@Model.Img01">
                </div>
                <div id="thumbnail" class="d-flex justify-content-between mt-75">
                    <div style="height: 75px; width: 95px" class="hover-border">
                        <img class="h-100 w-100" src="@Model.Img01">
                    </div>
                    <div style="height: 75px; width: 95px">
                        <img class="h-100 w-100" src="@Model.Img02">
                    </div>
                    <div style="height: 75px; width: 95px">
                        <img class="h-100 w-100" src="@Model.Img03">
                    </div>
                </div>
            </div>
            <p>名字 : @Model.Name</p>
            <p>性別 : @sex</p>
            <p>年齡 : @Model.Age 歲</p>
            <p>品種 : @Model.Breed</p>
            <p>走失日期 : @Html.DisplayFor(x => x.Date)</p>
            <div id="detail-member" class="mb-4" style="width:40%;">
                <a asp-action="" data-member-id="@Model.MemberId"><img src="@Model.Photo" class="rounded-circle me-2" style="height:50px; width:50px;" />@Model.MemberName<i class="fa-solid fa-comment-dots ms-2"></i></a>
            </div>
            <div class="speech-bubble" style="height:30%; width:90%; color:black; ">
                <div class="overflow-auto h-100 w-100 py-2 px-4" style="word-break:break-all">
                    @Model.Description
                </div>
            </div>
        </div>
        <div class="modal-footer d-flex justify-content-around">
            <button data-missing-id="@Model.MissingId" class="btn btn-light rounded-pill" id="checkClues"><i class="fa-solid fa-magnifying-glass mx-1"></i> 查看線索</button>
            <button class="btn btn-light rounded-pill" data-missing-date="@Model.Date.ToString("yyyy-MM-dd")" data-member-id="@Model.MemberId" id="provideClues"><i class="fa-solid fa-location-dot mx-1"></i> 提供線索</button>
        </div>
    </div>
</div>



<script>

    $('#detail-member a').on('click', function(e) {
        e.preventDefault();

        checkLogin(() => {
            messagebox.messageTo($(this).data('memberId'), '@selfId');
        })
    })


    $('#checkClues').click(function() {

        let timeouts = [];

        if (clueCount == 0) {
            Swal.fire({
                heightAuto: false,
                position: 'center',
                title: '此協尋尚未存在有效線索',
                icon: 'warning',
                showConfirmButton: false,
                timer: 2500
            })
        }
        else {

            //暫存折線
            let polyline = [];

            //切換布局 隱藏原本圖標
            google.maps.event.removeListener(listener);
            setMarkerVisibility('hide');
            $('#detailModal').modal('hide');
            $('#pre-publish, #backToDetail').toggleClass('d-none');
            toggleMap();


            //請求CLUE清單
            $.get('/Missings/SetCluesMarker', { missingId }, function(data) {


                //所有CLUE裡的MARKER
                let missingPos = clickedMarker.getPosition();
                let missingMarker = new google.maps.Marker({
                    position: missingPos,
                    icon: {
                        url: "images/marker.png",
                        scaledSize: new google.maps.Size(33, 46)
                    }
                });

                cluesMarker.push(missingMarker);

                data.forEach((clue) => {
                    let LatLng = new google.maps.LatLng(clue.witnessLat, clue.witnessLng);
                    let marker = new google.maps.Marker({
                        position: LatLng,
                        icon: {
                            url: "images/marker.png",
                            scaledSize: new google.maps.Size(33, 46)
                        }
                    });

                    cluesMarker.push(marker);
                })

            }).then(() => {

                //折線的每個點
                let polylinePathPoints = [];

                //把MARKER每隔一秒放上地圖
                for (let i = 0; i < cluesMarker.length; i++) {

                    polylinePathPoints.push(cluesMarker[i].getPosition());
                    if (i == 0) {

                        timeouts.push(setTimeout(() => {
                            cluesMarker[i].setMap(map)
                        }, i * 1000))
                    }
                    else {
                        timeouts.push(setTimeout(() => {
                            cluesMarker[i].setAnimation(google.maps.Animation.DROP)
                            cluesMarker[i].setMap(map)
                        }, i * 1000))
                    }
                }

                //折線動畫
                for (let i = 0; i < polylinePathPoints.length - 1; i++) {

                    let departure = polylinePathPoints[i];
                    let arrival = polylinePathPoints[i + 1];
                    let polylinePath = new google.maps.Polyline({
                        path: [departure, departure],
                        strokeOpacity: 0,
                        strokeWeight: 2.5,
                        strokeColor: '#f5deb3',
                        icons: [{
                            icon: {
                                path: "M 0.8617 -2.4969 C 0.8508 -2.4969 0.8398 -2.4961 0.8297 -2.4953 C 0.4023 -2.4188 0.1672 -1.95 0.1328 -1.5367 C 0.0836 -1.1617 0.243 -0.6797 0.6398 -0.5953 C 0.6969 -0.5844 0.757 -0.5891 0.8133 -0.6055 C 1.2914 -0.7719 1.5055 -1.3586 1.4359 -1.8453 C 1.4164 -2.1594 1.1875 -2.5008 0.8617 -2.4969 Z M -0.95 -2.4766 C -1.2164 -2.4695 -1.4227 -2.1906 -1.4648 -1.9273 C -1.5539 -1.407 -1.3258 -0.7602 -0.8023 -0.5953 C -0.7539 -0.5844 -0.7031 -0.5836 -0.6539 -0.5914 C -0.3 -0.6523 -0.1508 -1.0633 -0.1648 -1.3953 C -0.1758 -1.8328 -0.3953 -2.3391 -0.8336 -2.4617 C -0.8734 -2.4727 -0.9125 -2.4773 -0.95 -2.4766 Z M 2.0195 -0.9984 C 1.5594 -0.9695 1.2445 -0.4937 1.1992 -0.05 C 1.1391 0.2703 1.3031 0.6992 1.6563 0.725 C 2.1469 0.7188 2.4828 0.1742 2.4961 -0.2945 C 2.5273 -0.6047 2.3516 -0.9813 2.0195 -0.9984 Z M -2.0039 -0.8922 C -2.2 -0.8945 -2.3922 -0.7727 -2.4562 -0.5664 C -2.6266 -0.0148 -2.2844 0.6836 -1.7211 0.7992 C -1.4859 0.8414 -1.2797 0.6539 -1.2211 0.4289 C -1.0977 -0.0531 -1.3516 -0.6125 -1.7805 -0.8312 C -1.8508 -0.8719 -1.9273 -0.8922 -2.0039 -0.8922 Z M 0.0563 0.0961 C -0.3266 0.0977 -0.7164 0.2992 -0.9648 0.5992 C -1.2328 0.95 -1.4523 1.357 -1.5383 1.7992 C -1.643 2.1172 -1.4063 2.4828 -1.0781 2.4852 C -0.6836 2.4961 -0.3445 2.2156 0.0469 2.1945 C 0.3797 2.1422 0.6781 2.3219 0.9773 2.4391 C 1.232 2.5523 1.5836 2.5086 1.7133 2.2242 C 1.8156 1.9352 1.6656 1.6258 1.5406 1.3688 C 1.2859 0.9508 1.0141 0.5117 0.5969 0.2508 C 0.4297 0.1438 0.2438 0.0961 0.0563 0.0961 Z M 0.0563 0.0961",
                                strokeOpacity: 1,
                                fillColor: '#000',
                                fillOpacity: 0.5
                            },
                            offset: '100%',
                            repeat: '30px'
                        }]
                    });

                    polyline.push(polylinePath);

                    timeouts.push(setTimeout(() => {
                        polylinePath.setMap(map);
                        let step = 0;
                        let numSteps = 1000;
                        let timePerStep = 20;
                        let interval = setInterval(function() {
                            step += 20;
                            if (step > numSteps) {
                                clearInterval(interval);
                            } else {
                                let are_we_there_yet = google.maps.geometry.spherical.interpolate(departure, arrival, step / numSteps);
                                polylinePath.setPath([departure, are_we_there_yet]);
                            }
                        }, timePerStep);
                    }, i * 1000 + 500))
                }
            })




            $('#backToDetail').one('click', function() {
                $('#pre-publish, #backToDetail').toggleClass('d-none');
                toggleMap();
                setMarkerVisibility('show');
                $('#detailModal').html(detalModal);
                $('#detailModal').modal('show');
                listener = map.addListener('idle', () => { searchCat(scaledRange) });

                cluesMarker.forEach((marker) => {
                    marker.setMap(null)
                })
                polyline.forEach((line) => {
                    line.setMap(null)
                })

                polyline = [];
                cluesMarker = [];

                timeouts.forEach((value) => {
                    clearTimeout(value);
                })
            })
        }

    })



    hovered = $('#thumbnail').find(':first-child')


    $('#thumbnail div').mouseenter(function() {

        let img = $('#main-img>img');

        img.attr('src', $(this).find(':first-child').attr('src'));

        hovered.removeClass('hover-border')
        hovered = $(this);
        hovered.addClass('hover-border');
    })

</script>
